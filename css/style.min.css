/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font:1em monospace,monospace}a{background:0 0}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font:1em monospace,monospace}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font:100%/1.15 inherit;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}template{display:none}[hidden]{display:none}*,::after,::before{box-sizing:inherit}html{box-sizing:border-box}body{margin:0}img{max-width:100%}a{text-decoration:none}.container{max-width:1280px;margin:0 auto;padding-left:55px;padding-right:55px}.row{display:-webkit-box;display:flex;flex-wrap:wrap;margin-left:-10px;margin-right:-10px}.col3{box-sizing:border-box;word-wrap:break-word;margin-left:10px;margin-right:10px;width:calc(25% - 20px)}.col5{box-sizing:border-box;word-wrap:break-word;margin-left:10px;margin-right:10px;width:calc(41.66667% - 20px)}.col6{box-sizing:border-box;word-wrap:break-word;margin-left:10px;margin-right:10px;width:calc(50% - 20px)}.col7{box-sizing:border-box;word-wrap:break-word;margin-left:10px;margin-right:10px;width:calc(58.33333% - 20px)}.col9{box-sizing:border-box;word-wrap:break-word;margin-left:10px;margin-right:10px;width:calc(75% - 20px)}@font-face{font-family:AvenirNextCyr-Bold;src:url(../fonts/avenirnextcyr-bold.eot);src:url(../fonts/avenirnextcyr-bold.eot?#iefix) format("embedded-opentype"),url(../fonts/avenirnextcyr-bold.woff2) format("woff2"),url(../fonts/avenirnextcyr-bold.woff) format("woff"),url(../fonts/avenirnextcyr-bold.ttf) format("truetype"),url(../fonts/avenirnextcyr-bold.svg#avenirnextcyr-bold) format("svg")}@font-face{font-family:AvenirNextCyr-BoldItalic;src:url(../fonts/avenirnextcyr-bolditalic.eot);src:url(../fonts/avenirnextcyr-bolditalic.eot?#iefix) format("embedded-opentype"),url(../fonts/avenirnextcyr-bolditalic.woff2) format("woff2"),url(../fonts/avenirnextcyr-bolditalic.woff) format("woff"),url(../fonts/avenirnextcyr-bolditalic.ttf) format("truetype"),url(../fonts/avenirnextcyr-bolditalic.svg#avenirnextcyr-bolditalic) format("svg")}@font-face{font-family:AvenirNextCyr-Demi;src:url(../fonts/avenirnextcyr-demi.eot);src:url(../fonts/avenirnextcyr-demi.eot?#iefix) format("embedded-opentype"),url(../fonts/avenirnextcyr-demi.woff2) format("woff2"),url(../fonts/avenirnextcyr-demi.woff) format("woff"),url(../fonts/avenirnextcyr-demi.ttf) format("truetype"),url(../fonts/avenirnextcyr-demi.svg#avenirnextcyr-demi) format("svg")}@font-face{font-family:AvenirNextCyr-DemiItalic;src:url(../fonts/avenirnextcyr-demiitalic.eot);src:url(../fonts/avenirnextcyr-demiitalic.eot?#iefix) format("embedded-opentype"),url(../fonts/avenirnextcyr-demiitalic.woff2) format("woff2"),url(../fonts/avenirnextcyr-demiitalic.woff) format("woff"),url(../fonts/avenirnextcyr-demiitalic.ttf) format("truetype"),url(../fonts/avenirnextcyr-demiitalic.svg#avenirnextcyr-demiitalic) format("svg")}@font-face{font-family:AvenirNextCyr-Heavy;src:url(../fonts/avenirnextcyr-heavy.eot);src:url(../fonts/avenirnextcyr-heavy.eot?#iefix) format("embedded-opentype"),url(../fonts/avenirnextcyr-heavy.woff2) format("woff2"),url(../fonts/avenirnextcyr-heavy.woff) format("woff"),url(../fonts/avenirnextcyr-heavy.ttf) format("truetype"),url(../fonts/avenirnextcyr-heavy.svg#avenirnextcyr-heavy) format("svg")}@font-face{font-family:AvenirNextCyr-HeavyItalic;src:url(../fonts/avenirnextcyr-heavyitalic.eot);src:url(../fonts/avenirnextcyr-heavyitalic.eot?#iefix) format("embedded-opentype"),url(../fonts/avenirnextcyr-heavyitalic.woff2) format("woff2"),url(../fonts/avenirnextcyr-heavyitalic.woff) format("woff"),url(../fonts/avenirnextcyr-heavyitalic.ttf) format("truetype"),url(../fonts/avenirnextcyr-heavyitalic.svg#avenirnextcyr-heavyitalic) format("svg")}@font-face{font-family:AvenirNextCyr-Italic;src:url(../fonts/avenirnextcyr-italic.eot);src:url(../fonts/avenirnextcyr-italic.eot?#iefix) format("embedded-opentype"),url(../fonts/avenirnextcyr-italic.woff2) format("woff2"),url(../fonts/avenirnextcyr-italic.woff) format("woff"),url(../fonts/avenirnextcyr-italic.ttf) format("truetype"),url(../fonts/avenirnextcyr-italic.svg#avenirnextcyr-italic) format("svg")}@font-face{font-family:AvenirNextCyr-Light;src:url(../fonts/avenirnextcyr-light.eot);src:url(../fonts/avenirnextcyr-light.eot?#iefix) format("embedded-opentype"),url(../fonts/avenirnextcyr-light.woff2) format("woff2"),url(../fonts/avenirnextcyr-light.woff) format("woff"),url(../fonts/avenirnextcyr-light.ttf) format("truetype"),url(../fonts/avenirnextcyr-light.svg#avenirnextcyr-light) format("svg")}@font-face{font-family:AvenirNextCyr-LightItalic;src:url(../fonts/avenirnextcyr-lightitalic.eot);src:url(../fonts/avenirnextcyr-lightitalic.eot?#iefix) format("embedded-opentype"),url(../fonts/avenirnextcyr-lightitalic.woff2) format("woff2"),url(../fonts/avenirnextcyr-lightitalic.woff) format("woff"),url(../fonts/avenirnextcyr-lightitalic.ttf) format("truetype"),url(../fonts/avenirnextcyr-lightitalic.svg#avenirnextcyr-lightitalic) format("svg")}@font-face{font-family:AvenirNextCyr-Medium;src:url(../fonts/avenirnextcyr-medium.eot);src:url(../fonts/avenirnextcyr-medium.eot?#iefix) format("embedded-opentype"),url(../fonts/avenirnextcyr-medium.woff2) format("woff2"),url(../fonts/avenirnextcyr-medium.woff) format("woff"),url(../fonts/avenirnextcyr-medium.ttf) format("truetype"),url(../fonts/avenirnextcyr-medium.svg#avenirnextcyr-medium) format("svg")}@font-face{font-family:AvenirNextCyr-MediumItalic;src:url(../fonts/avenirnextcyr-mediumitalic.eot);src:url(../fonts/avenirnextcyr-mediumitalic.eot?#iefix) format("embedded-opentype"),url(../fonts/avenirnextcyr-mediumitalic.woff2) format("woff2"),url(../fonts/avenirnextcyr-mediumitalic.woff) format("woff"),url(../fonts/avenirnextcyr-mediumitalic.ttf) format("truetype"),url(../fonts/avenirnextcyr-mediumitalic.svg#avenirnextcyr-mediumitalic) format("svg")}@font-face{font-family:AvenirNextCyr-Regular;src:url(../fonts/avenirnextcyr-regular.eot);src:url(../fonts/avenirnextcyr-regular.eot?#iefix) format("embedded-opentype"),url(../fonts/avenirnextcyr-regular.woff2) format("woff2"),url(../fonts/avenirnextcyr-regular.woff) format("woff"),url(../fonts/avenirnextcyr-regular.ttf) format("truetype"),url(../fonts/avenirnextcyr-regular.svg#avenirnextcyr-regular) format("svg")}@font-face{font-family:AvenirNextCyr-Thin;src:url(../fonts/avenirnextcyr-thin.eot);src:url(../fonts/avenirnextcyr-thin.eot?#iefix) format("embedded-opentype"),url(../fonts/avenirnextcyr-thin.woff2) format("woff2"),url(../fonts/avenirnextcyr-thin.woff) format("woff"),url(../fonts/avenirnextcyr-thin.ttf) format("truetype"),url(../fonts/avenirnextcyr-thin.svg#avenirnextcyr-thin) format("svg")}@font-face{font-family:AvenirNextCyr-ThinItalic;src:url(../fonts/avenirnextcyr-thinitalic.eot);src:url(../fonts/avenirnextcyr-thinitalic.eot?#iefix) format("embedded-opentype"),url(../fonts/avenirnextcyr-thinitalic.woff2) format("woff2"),url(../fonts/avenirnextcyr-thinitalic.woff) format("woff"),url(../fonts/avenirnextcyr-thinitalic.ttf) format("truetype"),url(../fonts/avenirnextcyr-thinitalic.svg#avenirnextcyr-thinitalic) format("svg")}@font-face{font-family:AvenirNextCyr-UltraLight;src:url(../fonts/avenirnextcyr-ultralight.eot);src:url(../fonts/avenirnextcyr-ultralight.eot?#iefix) format("embedded-opentype"),url(../fonts/avenirnextcyr-ultralight.woff2) format("woff2"),url(../fonts/avenirnextcyr-ultralight.woff) format("woff"),url(../fonts/avenirnextcyr-ultralight.ttf) format("truetype"),url(../fonts/avenirnextcyr-ultralight.svg#avenirnextcyr-ultralight) format("svg")}@font-face{font-family:AvenirNextCyr-UltraLightIt;src:url(../fonts/avenirnextcyr-ultralightit.eot);src:url(../fonts/avenirnextcyr-ultralightit.eot?#iefix) format("embedded-opentype"),url(../fonts/avenirnextcyr-ultralightit.woff2) format("woff2"),url(../fonts/avenirnextcyr-ultralightit.woff) format("woff"),url(../fonts/avenirnextcyr-ultralightit.ttf) format("truetype"),url(../fonts/avenirnextcyr-ultralightit.svg#avenirnextcyr-ultralightit) format("svg")}.main{font-size:14px;position:relative}.main a{position:relative;z-index:2;color:#fff}.main__background,.main__line{height:64px}.main__background{background:#2085fb;box-shadow:0 4px 24px rgba(12,85,163,.3);position:absolute;width:100%;left:0}.main__line{display:-webkit-box;display:flex;position:relative;-webkit-box-pack:justify;justify-content:space-between;-webkit-box-align:center;align-items:center}.main__authentic{display:-webkit-box;display:flex;font-family:AvenirNextCyr-Demi;font-style:normal;font-weight:500;line-height:19px;letter-spacing:.02em;color:#fff}.main__authentic span{margin:0 5px}.main__icon{margin-right:16px}.baner{margin-top:30px;color:#4a4a4a}.baner .row{height:100%}.baner__big{background:#f5f5f5;border-radius:8px;min-height:450px;display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column}.baner h1{font-size:45px;line-height:61px;letter-spacing:.02em;margin-left:43px;margin-top:120px}.baner h2{margin-left:43px;margin-top:-30px;margin-bottom:60px;font-size:30px;line-height:41px;letter-spacing:.02em}.baner h2 span{font-family:AvenirNextCyr-Bold;color:#2f85e9}.baner__price{font:24px/33px AvenirNextCyr-Bold;letter-spacing:.02em;color:#fff;background:#f92400;border-radius:0 20px 20px 0;padding:5px 25px 5px 45px;width:50%}.baner__images{position:relative}.baner__line1{position:absolute;right:0;bottom:11%;z-index:1}.baner__line2{position:absolute;right:55%;bottom:0;z-index:1}.baner__img{z-index:2;position:absolute;right:11%;bottom:0}.baner__small{position:relative;background:#fff;border-radius:8px;border:2px solid #e8e8e8;box-sizing:border-box;width:250px;height:210px;color:#4a4a4a;font-size:24px}.baner__small h2{text-transform:capitalize;margin:0;font-size:24px;line-height:109.4%;margin-left:16px;margin-top:15px;margin-bottom:16px}.baner__small h2 span{color:#f92400}.baner__small_price{font:16px/33px AvenirNextCyr-Bold;letter-spacing:.02em;color:#fff;background:#f92400;border-radius:0 20px 20px 0;padding:3px 13px;width:50%}.baner__small img{position:absolute;left:8px;bottom:-1px;border-radius:8px;max-width:238px}.baner__small:first-child{background:#f5f5f5}.baner__small:last-child{margin-top:30px}.baner__small:last-child h2{font-style:normal;line-height:120.9%}.baner__small:last-child h2 span{color:#2f85e9}.footer{border:1px solid red}@media screen and (max-width:780px){.container{padding-left:15px;padding-right:15px}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
